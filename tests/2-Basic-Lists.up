# Basic lists and list functions
# Functions: [get, length, map, range, any, all, filter, concat, pop, put, reduce]
# TODO: [slice]

assign qsort = lambda lst $
   if (<= (length lst) 1)
       then
           lst
       else
           (concat
               (qsort (filter (lambda x $ (< x (get lst 0))) (pop lst 0)))
               [(get lst 0)]
               (qsort (filter (lambda x $ (>= x (get lst 0))) (pop lst 0)))
           );

assign contains = lambda lst elem $
    (> (length (filter (lambda le $ (== le elem)) lst)) 0);

assign lst = [9, 3, 6, 9, 2, 4, 8, 3, 3];
assign a = (map (lambda x $ (* 2 x)) lst);

assign testScope = lambda i $ (map (lambda x $ (* (get lst i) x)) lst);

assign isNotDiv = lambda a b $ (! (% a b));
assign isPrime = lambda n $ if (<= n 3) then True else (! (any (map (lambda d $ (== (% n d) 0)) (range 2 n))));